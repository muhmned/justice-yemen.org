const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function testDatabase() {
  console.log('๐ ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุจุงุดุฑุฉ...\n');

  try {
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    console.log('1. ุงุฎุชุจุงุฑ ุงูุงุชุตุงู...');
    await prisma.$connect();
    console.log('โ ุงูุงุชุตุงู ูุงุฌุญ');
    
    // ุงุฎุชุจุงุฑ BasicInfo
    console.log('\n2. ุงุฎุชุจุงุฑ BasicInfo...');
    const basicInfo = await prisma.basicInfo.findFirst({ where: { page: 'home' } });
    console.log('BasicInfo:', basicInfo ? 'ููุฌูุฏ' : 'ุบูุฑ ููุฌูุฏ');
    
    // ุงุฎุชุจุงุฑ News
    console.log('\n3. ุงุฎุชุจุงุฑ News...');
    const news = await prisma.news.findMany();
    console.log('News count:', news.length);
    
    // ุงุฎุชุจุงุฑ Reports
    console.log('\n4. ุงุฎุชุจุงุฑ Reports...');
    const reports = await prisma.report.findMany();
    console.log('Reports count:', reports.length);
    
    // ุงุฎุชุจุงุฑ Sections
    console.log('\n5. ุงุฎุชุจุงุฑ Sections...');
    const sections = await prisma.section.findMany();
    console.log('Sections count:', sections.length);
    
  } catch (error) {
    console.error('โ ุฎุทุฃ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testDatabase(); 