// ุงุฎุชุจุงุฑ ุณุฑูุน ููุธุงู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ
const fetch = require('node-fetch');

const BASE_URL = 'http://localhost:5000';
const TEST_TOKEN = 'your-test-token-here'; // ุงุณุชุจุฏู ุจุงูุชููู ุงูุญูููู

async function testBackupSystem() {
  console.log('๐ ุงุฎุชุจุงุฑ ูุธุงู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ...\n');

  // ุงุฎุชุจุงุฑ 1: ูุญุต ุตุญุฉ ุงูุฎุงุฏู
  console.log('1. ุงุฎุชุจุงุฑ ุตุญุฉ ุงูุฎุงุฏู...');
  try {
    const healthResponse = await fetch(`${BASE_URL}/api/health`);
    const healthData = await healthResponse.json();
    console.log('โ ุงูุฎุงุฏู ูุนูู:', healthData);
  } catch (error) {
    console.log('โ ุงูุฎุงุฏู ูุง ูุนูู:', error.message);
    return;
  }

  // ุงุฎุชุจุงุฑ 2: ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช
  console.log('\n2. ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช...');
  try {
    const dbResponse = await fetch(`${BASE_URL}/api/health/db`);
    const dbData = await dbResponse.json();
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุชุนูู:', dbData);
  } catch (error) {
    console.log('โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ูุง ุชุนูู:', error.message);
    return;
  }

  // ุงุฎุชุจุงุฑ 3: ุงุฎุชุจุงุฑ ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ
  console.log('\n3. ุงุฎุชุจุงุฑ ุฅูุดุงุก ูุณุฎุฉ ุงุญุชูุงุทูุฉ...');
  try {
    const backupResponse = await fetch(`${BASE_URL}/api/backup`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${TEST_TOKEN}`
      },
      body: JSON.stringify({ type: 'sections' })
    });
    
    if (backupResponse.ok) {
      const backupData = await backupResponse.json();
      console.log('โ ุชู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ:', backupData.message);
    } else {
      const errorData = await backupResponse.json();
      console.log('โ ูุดู ูู ุฅูุดุงุก ุงููุณุฎุฉ ุงูุงุญุชูุงุทูุฉ:', errorData.error);
    }
  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
  }

  // ุงุฎุชุจุงุฑ 4: ุงุฎุชุจุงุฑ ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ
  console.log('\n4. ุงุฎุชุจุงุฑ ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ...');
  try {
    const backupsResponse = await fetch(`${BASE_URL}/api/backups`, {
      headers: {
        'Authorization': `Bearer ${TEST_TOKEN}`
      }
    });
    
    if (backupsResponse.ok) {
      const backupsData = await backupsResponse.json();
      console.log('โ ุชู ุฌูุจ ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ:', backupsData.backups.length, 'ูุณุฎุฉ');
    } else {
      const errorData = await backupsResponse.json();
      console.log('โ ูุดู ูู ุฌูุจ ูุงุฆูุฉ ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ:', errorData.error);
    }
  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
  }

  console.log('\n๐ฏ ุงูุชูู ุงูุงุฎุชุจุงุฑ!');
}

// ุชุดุบูู ุงูุงุฎุชุจุงุฑ
testBackupSystem().catch(console.error); 